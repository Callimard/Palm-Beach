package org.palmbeach.core.simulation.configuration;

import com.typesafe.config.Config;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NonNull;
import org.palmbeach.core.simulation.configuration.exception.GenerationFailedException;

/**
 * {@code PalmBeachConfiguration} is a configuration of a simulation object base on the base config pass in parameter.
 * <p>
 * The method {@link #generate()} generate the simulation object that the configuration can generate after parsing.
 *
 * @param <T> the type of the object that the configuration can generate
 */
@AllArgsConstructor(access = AccessLevel.PROTECTED)
public abstract class PalmBeachConfiguration<T> {

    @Getter
    @NonNull
    private final Config baseConfig;

    /**
     * @return a new instance of {@code T} generated by the interpretation of the configuration.
     *
     * @throws GenerationFailedException if the generation failed
     */
    public abstract T generate() throws GenerationFailedException;

}
