# Simulation

simulation.threads=4
simulation.max-duration=1500
simulation.setup-class="org.paradise.palmbeach.core.simulation.SimulationSetupTest$BasicSimulationSetup"

# Controllers

controller.myController.class="org.paradise.palmbeach.core.simulation.ControllerTest$BasicController"
controller.myController.schedule-mode=REPEATEDLY
controller.myController.schedule-time=1
controller.myController.executions-step=50
controller.myController.repetitions=5
controller.myController.custom-property=custom-value

# Physical Networks

network.fullyConnected.class="org.paradise.palmbeach.core.environment.network.NetworkTest$BasicNetwork"
network.fullyConnected.context.class=org.paradise.palmbeach.utils.context.SimpleContext
network.fullyConnected.context.key1="value1"
network.fullyConnected.context.key2="value2"

# Environments

environment.simpleEnvironment.class="org.paradise.palmbeach.core.environment.Environment"
environment.simpleEnvironment.context.class=org.paradise.palmbeach.utils.context.SimpleContext
environment.simpleEnvironment.networks=[fullyConnected]
environment.simpleEnvironment.context.key1="value1"
environment.simpleEnvironment.context.key2="value2"

# Protocols

protocol.transport.class="org.paradise.palmbeach.core.agent.protocol.ProtocolTest$BasicProtocol"
protocol.transport.context.class=org.paradise.palmbeach.utils.context.SimpleContext
protocol.transport.context.key1="value1"
protocol.transport.context.key2="value2"

protocol.mainProtocol.class="org.paradise.palmbeach.core.agent.protocol.ProtocolTest$ProtocolWithDependencies"
protocol.mainProtocol.basicProtocol=transport

# Behaviors

behavior.correctBehavior.class="org.paradise.palmbeach.core.agent.behavior.BehaviorTest$BasicBehavior"
behavior.correctBehavior.context.class=org.paradise.palmbeach.utils.context.SimpleContext
behavior.correctBehavior.context.key1="value1"
behavior.correctBehavior.context.key2="value2"

# Agents

agent.correctAgent.name-pattern="CorrectAgent %d"
agent.correctAgent.number=15
agent.correctAgent.context.class=org.paradise.palmbeach.utils.context.SimpleContext
agent.correctAgent.context.key1="value1"
agent.correctAgent.context.key2="value2"
agent.correctAgent.environments=[simpleEnvironment]
agent.correctAgent.protocols=[transport, mainProtocol]
agent.correctAgent.behaviors=[correctBehavior]

agent.byzantineAgent.class=org.paradise.palmbeach.core.agent.SimpleAgent
agent.byzantineAgent.name-pattern="ByzantineAgent %d"
agent.byzantineAgent.number=3
agent.byzantineAgent.environments=[simpleEnvironment]
agent.byzantineAgent.protocols=[transport]
agent.byzantineAgent.behaviors=[correctBehavior]
